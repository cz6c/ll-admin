# 开发环境配置
app:
  prefix: ''
  port: 6060
  # 文件相关
  file:
    # 是否为本地文件服务或cos
    isLocal: true
    # location 文件上传后存储目录，相对路径（相对本项目根目录）或绝对路径
    location: '../upload'
    # 文件服务器地址，这是开发环境的配置 生产环境请自行配置成可访问域名
    domain: 'http://127.0.0.1:6060'
    # 文件虚拟路径, 必须以 / 开头， 如 http://localhost:8081/static/****.jpg  , 如果不需要则 设置 ''
    serveRoot: '/upload'
    # 文件大小限制，单位M
    maxSize: 10
# 腾讯云cos配置
cos:
  secretId: 'LnBGTt5m6fy4JyleKCeYCh1Hhgh_tuSAN7kiLi4X'
  secretKey: 'TizLfssZ0aAhpGX_PM1r8wlnCgaTjgh1CBpiD9Sq'
  bucket: 'cz6-hw'
  region: ''
  domain: 'http://qiniu.cz6hy9.top'
  location: ''
# 数据库配置
db:
  mysql:
    host: '156.236.66.19'
    username: 'admin_temp'
    password: 'SBFE2Ptkj24aECwH'
    database: 'admin_temp'
    # host: '127.0.0.1'
    # username: 'root'
    # password: '123456'
    # database: 'loca_test'
    port: 3306
    charset: 'utf8mb4'
    # 是否启用日志记录
    logging: true
    # 这个记录器将所有日志写入项目根文件夹中的ormlogs.log
    logger: 'file'
    # 每次建立连接时删除架构。请注意此选项，不要在生产环境中使用它，否则将丢失所有生产数据。但是此选项在调试和开发期间非常有用。
    dropSchema: false
    # 如果数据库中不存在与 TypeORM 实体类对应的数据表，则会自动创建相应的数据表。
    # 如果数据库中已经存在数据表，并且其结构与 TypeORM 实体类完全一致，则不会做任何操作。
    # 如果数据库中已经存在数据表，但其结构与 TypeORM 实体类不匹配，则会自动对数据表进行修改，使其与实体类相匹配。--*如果删除字段会造成该字段数据丢失
    synchronize: false
    # 每个查询允许多个 mysql 语句。请注意，它可能会增加 SQL 注入攻击的范围
    multipleStatements: true
    # 同时启用supportBigNumbers和bigNumberStrings会强制将大数字（BIGINT和DECIMAL列）作为 JavaScript String 对象返回（默认值：false）。启用supportBigNumbers但禁用bigNumberStrings仅当它们无法用 JavaScript Number 对象准确表示时才会返回大数字作为 String 对象（当它们超过[-2^53，+2^53]范围时会发生），否则它们将被返回作为数字对象。如果禁用了supportBigNumbers，则忽略此选项。
    supportBigNumbers: true
    bigNumberStrings: true

# redis 配置
redis:
  host: '127.0.0.1'
  password: '123456'
  port: 6379
  db: 1
  keyPrefix: ''

# jwt 配置
jwt:
  secretkey: 'you_secretkey'

# 权限 白名单配置
perm:
  router:
    whitelist: [
        { path: '/captchaImage', method: 'GET' },
        { path: '/register', method: 'POST' },
        { path: '/login', method: 'POST' },
        { path: '/common/area/list', method: 'GET' },
        { path: '/system/config/refreshCache', method: 'Delete' },
        # { path: '/system/user/list', method: 'GET' },
        # { path: '/system/user/:userId', method: 'GET' },
      ]

# 发送邮箱配置
mail:
  host: 'smtp.163.com'
  port: 465
  secure: true
  auth: { user: 'chenzb961@163.com', pass: 'TUWLhYad2NcPy5PJ' }

# 聚合api配置
nowapi:
  host: 'https://sapi.k780.com'
  appkey: 74718
  sign: '3dcd6cb85599ae25e2d68906fcfd4e6d'
